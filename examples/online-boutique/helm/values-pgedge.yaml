# Values for online-boutique with pgEdge backend 
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

online_boutique:
  gvc: online-boutique
  locations: gcp-us-west1,aws-eu-central-1,azure-eastus2
  db_postgres:
    POSTGRES_TABLE_NAME: online_boutique

tracing:
  controlplane:
    sampling: 100
  # otel:
  #   image: 'otel/opentelemetry-collector-contrib:0.94.0'
  #   otel_workload: 'otel-collector'
  #   otel_port: '4317'
  #   sampling: 100
  #   # Do not set DD_API_KEY_VALUE and DD_SITE_VALUE below inside quotation mark
  #   DD_API_KEY: DD_API_KEY_VALUE
  #   DD_SITE: DD_SITE_VALUE ## For Example: datadoghq.com
  #   cpu: 100m
  #   memory: 200Mi

image:
  # custom image
  repository: igorchyts/pgedge-cpln:v0.1

postgres:
  password: 'fdf32235fd'
  dbname: demo

pgedge:
  - name: pgedge-us-east
    port: 5432
    location: azure-eastus2
    diskCapacity: 20 # In Gigabytes
    memory: 3000Mi
    cpu: 1.5
  - name: pgedge-us-west
    port: 5432
    location: gcp-us-west1
    diskCapacity: 20 # In Gigabytes
    memory: 3000Mi
    cpu: 1.5
  - name: pgedge-eu-central
    enable: true
    port: 5432
    location: aws-eu-central-1
    diskCapacity: 20 # In Gigabytes
    memory: 3000Mi
    cpu: 1.5

pgadmin:
  gvc: pgcat-pgedge
  email: user@cpln.com
  password: admin
  memory: 300Mi
  cpu: 100m
  inboundCidr: 0.0.0.0/0

pgcat:
  name: pgcat
  gvc: pgcat-pgedge
  image: 'igorchyts/pgcat:v0.4'
  image_liveness: 'igorchyts/pgcat-liveness:v0.2'
  memory: 200Mi
  cpu: 100m
  pg_port: 6432
  prom_port: 9930
  capacityAI: false
  autoscaling:
    maxConcurrency: 0
    maxScale: 2
    metric: cpu
    minScale: 1
    scaleToZeroDelay: 300
    target: 70