#!/bin/bash
# this fakes that it is systemctl and reads the config file

#ExecStart=/home/pgedge/pgedge/pg15/bin/pg_ctl start  -D /home/pgedge/pgedge/data/pg15 -s -w -t 300
#ExecStop=/home/pgedge/pgedge/pg15/bin/pg_ctl stop   -D /home/pgedge/pgedge/data/pg15 -s -m fast
#ExecReload=/home/pgedge/pgedge/pg15/bin/pg_ctl reload -D /home/pgedge/pgedge/data/pg15 -s

STARTSTOP=$1
SVC=$2
CFGFILE=/lib/systemd/system/$SVC.service

if [ ! -r $CFGFILE ]; then
   echo "Cannot fake service $SVC - doesn't exist in /lib/systemd/system/"
   exit 1
fi

# find out what user we're supposed to run as
USER=`egrep ^USER= $CFGFILE |cut -d= -f2`
if [ "$USER" = "" ]; then
  USER=pgedge
fi
SUDO="sudo -u $USER "

if [ "$STARTSTOP" = "start" ]; then
  CMD=`egrep ^ExecStart $CFGFILE |cut -d= -f2`
  if [ "$CMD" = "" ]; then
     echo "no ExecStart command found in $CFGFILE"
     exit 1
  fi
  $SUDO $CMD
  sleep 3
  exit
fi

if [ "$STARTSTOP" = "stop" ]; then
  CMD=`egrep ^ExecStop $CFGFILE |cut -d= -f2`
  if [ "$CMD" = "" ]; then
     echo "no ExecStop command found in $CFGFILE"
     exit 1
  fi
  $SUDO $CMD
  exit
fi

if [ "$STARTSTOP" = "reload" ]; then
  CMD=`egrep ^ExecReload $CFGFILE |cut -d= -f2`
  if [ "$CMD" = "" ]; then
     echo "no ExecStop command found in $CFGFILE"
     exit 1
  fi
  $SUDO $CMD
  sleep 3
  exit
fi

if [ "$STARTSTOP" = "status" ]; then
  echo "not implemented"
elif [ "$STARTSTOP" = "reload" ]; then
  echo "not implemented"
fi

