{{- if (index .Values.pgedge 1).enable }}
kind: gvc
name: {{ (index .Values.pgedge 1).name }}
description: {{ (index .Values.pgedge 1).name }}
tags: {}
spec:
  staticPlacement:
    locationLinks:
      - //location/{{ (index .Values.pgedge 1).location }}
---
kind: identity
name: {{ (index .Values.pgedge 1).name }}
gvc: {{ (index .Values.pgedge 1).name }}
tags: {}
---
kind: volumeset
name: pgedge-data
description: pgedge-data
gvc: {{ (index .Values.pgedge 1).name }}
tags: {}
spec:
  fileSystemType: ext4
  initialCapacity: {{ (index .Values.pgedge 1).diskCapacity }}
  performanceClass: general-purpose-ssd
---
kind: policy
name: {{ (index .Values.pgedge 1).name }}
tags: {}
origin: default
bindings:
  - permissions:
      - reveal
    principalLinks:
      - //gvc/{{ (index .Values.pgedge 1).name }}/identity/{{ (index .Values.pgedge 1).name }}
targetKind: secret
targetLinks:
  - //secret/pgedge-start-script
  - //secret/pgedge-replication-sql
  - //secret/pgedge-postgres
---
kind: workload
name: pgedge
description: pgedge
gvc: {{ (index .Values.pgedge 1).name }}
tags: {}
spec:
  type: stateful
  containers:
    - name: pgedge
      args:
        - '-c'
        - >-
          cp /scripts/bootstrap-cpln.sh /usr/local/bin/bootstrap-cpln.sh &&
          chmod +x /usr/local/bin/bootstrap-cpln.sh && /usr/local/bin/bootstrap-cpln.sh
      command: /bin/bash
      env:
        - name: CLUSTER_NODES
          value: '{{- $length := len .Values.pgedge }}{{- range $index, $element := .Values.pgedge }}{{- if $element.enable }}pgedge.{{ $element.name }}.cpln.local:{{ $element.port }}{{ if lt $index (sub $length 1) }} {{ end }}{{- end }}{{- end }}'
        - name: POSTGRES_PASSWORD
          value: 'cpln://secret/pgedge-postgres.POSTGRES_PASSWORD'
        - name: POSTGRES_DB
          value: 'cpln://secret/pgedge-postgres.POSTGRES_DB'
      cpu: '{{ (index .Values.pgedge 1).cpu }}'
      image: '{{ .Values.image.repository }}'
      inheritEnv: false
      memory: {{ (index .Values.pgedge 1).memory }}
      ports:
        - number: {{ (index .Values.pgedge 1).port }}
          protocol: tcp
      volumes:
        - path: /opt/pgedge
          recoveryPolicy: retain
          uri: 'cpln://volumeset/pgedge-data'
        - path: /scripts/bootstrap-cpln.sh
          recoveryPolicy: retain
          uri: 'cpln://secret/pgedge-start-script'
        - path: /scripts/replication.sql
          recoveryPolicy: retain
          uri: 'cpln://secret/pgedge-replication-sql'
  defaultOptions:
    autoscaling:
      maxConcurrency: 0
      maxScale: 1
      metric: cpu
      minScale: 1
      scaleToZeroDelay: 300
      target: 95
    capacityAI: false
    debug: false
    suspend: false
    timeoutSeconds: 15
  firewallConfig:
    external:
      inboundAllowCIDR: []
      outboundAllowCIDR:
        - 0.0.0.0/0
      outboundAllowHostname: []
      outboundAllowPort: []
    internal:
      inboundAllowType: same-org
      inboundAllowWorkload: []
  identityLink: //identity/{{ (index .Values.pgedge 1).name }}
  localOptions: []
  rolloutOptions:
    maxSurgeReplicas: 25%
    maxUnavailableReplicas: '1'
    minReadySeconds: 0
  supportDynamicTags: false
{{- end }}