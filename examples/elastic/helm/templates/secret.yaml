kind: secret
name: elasticsearch-config-{{ .Values.cpln.gvc }}{{ .Values.elasticsearch.nameSuffix }}
type: opaque
data:
  encoding: plain
  payload: |-
    cluster.name: {{ .Values.elasticsearch.config.clusterName | quote }}
    network.host: {{ .Values.elasticsearch.config.networkHost }}
    node.store.allow_mmap: {{ .Values.elasticsearch.config.nodeStore.allowMmap }}
    xpack.security.enabled: {{ .Values.elasticsearch.config.security.enabled }}
    node.name: node-name-placeholder
    
    # Recovery and allocation settings
    cluster.routing.allocation.node_concurrent_incoming_recoveries: {{ .Values.elasticsearch.config.recovery.incomingRecoveries }}
    cluster.routing.allocation.node_concurrent_outgoing_recoveries: {{ .Values.elasticsearch.config.recovery.outgoingRecoveries }}
    indices.recovery.max_bytes_per_sec: {{ .Values.elasticsearch.config.recovery.maxBytesPerSec }}
    
    # Bulk operation settings
    http.max_content_length: 100mb
    http.max_initial_line_length: 4kb
    http.max_header_size: 8kb
    http.compression: true
    http.cors.enabled: true
    http.cors.allow-origin: "*"
    http.cors.allow-methods: OPTIONS, HEAD, GET, POST, PUT, DELETE
    http.cors.allow-headers: X-Requested-With, X-Auth-Token, Content-Type, Content-Length, Authorization
    
    # Node roles based on environment variable
    node.roles: ${NODE_ROLES}
    
    # Discovery configuration
    discovery.seed_hosts:
    {{- range $nodeType, $config := .Values.elasticsearch.nodes }}
    {{- if $config.enabled }}
      - es-{{ $nodeType }}.{{ $.Values.cpln.gvc }}.cpln.local
    {{- end }}
    {{- end }}
    
    # Network settings
    network.publish_host: ${POD_NAME}.{{ .Values.cpln.gvc }}.cpln.local
    network.bind_host: 0.0.0.0
    
    # Cluster settings
    cluster.initial_master_nodes:
    {{- range $nodeType, $config := .Values.elasticsearch.nodes }}
    {{- if $config.enabled }}
    {{- range $i, $e := until (int $config.replicas) }}
      - es-{{ $nodeType }}-{{ $i }}.{{ $.Values.cpln.gvc }}.cpln.local
    {{- end }}
    {{- end }}
    {{- end }}

---
kind: secret
name: elasticsearch-init-{{ .Values.cpln.gvc }}{{ .Values.elasticsearch.nameSuffix }}
type: opaque
data:
  encoding: plain
  payload: |-
    #!/bin/bash

    set -o errexit
    set -o nounset
    set -o pipefail
    set -x

    # Debug: Print environment variables
    echo "Environment variables:"
    env | sort

    # Set node name
    NODE_NAME="${POD_NAME}.{{ .Values.cpln.gvc }}.cpln.local"
    echo "Setting node name to: $NODE_NAME"

    # Copy and configure elasticsearch.yml
    cp /usr/share/elasticsearch/config-custom/elasticsearch.yml /usr/share/elasticsearch/config/elasticsearch.yml
    ELASTIC_CONFIG_FILE=/usr/share/elasticsearch/config/elasticsearch.yml

    # Replace node name placeholder
    sed -i "s/node-name-placeholder/$NODE_NAME/g" "$ELASTIC_CONFIG_FILE"

    # Print configuration for debugging
    echo "Elasticsearch configuration:"
    cat $ELASTIC_CONFIG_FILE

    # Start Elasticsearch
    echo "Starting Elasticsearch process..."
    exec /usr/local/bin/docker-entrypoint.sh
